# Question-1
a=[1,2,5,6]
b=[[1,3,5,6],[2,5,6,8,10,12],[3,4,6,7], [3,4,3,2],[1,2,6,8],[5,5,6,6]]
c=append list that matches more than two numbers from the list of list

# Question-2

"""
GET
https://devops-tools/myname => ID


POST
https://devops-tools/ID

Payload: phone_number

"""

"""
Input: prices = [7,1,5,3,6,4]
Output: [2,5]
Buy day, Sell day
Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.
"""

prices = [7,1,5,3,6,4]

# Find all combinations of buy and sell
# Find the combination which has max(sell-buy)

pairs = list()

# Find all combi
for i in range(0, len(prices)):
    p1 = prices[i]
    for j in range(i+1, len(prices)):
        p2 = prices[j]
        pairs.append((p1, p2))


# Find profit

profit = list()

for p in pairs:
    profit.append(p[1] - p[0])


# Find max profit

max_profit = -255

for p in profit:
    if max_profit < p:
        max_profit = p


# Find pair with max_profit
match = None
for i in range(0, len(profit)):
    if profit[i] == max_profit:
        match = i
        break

print (pairs)

print (profit)

print (max_profit)

print ("Max profit when bought on '%s' and sold on '%s'. " % pairs[match])

buy, sell = None, None

for i in range(0, len(prices)):
    if pairs[match][0] == prices[i]:
        buy = i + 1
    if pairs[match][1] == prices[i]:
        sell = i + 1

print ("Buy on day '%s' and sell on day '%s'." % (buy, sell))
